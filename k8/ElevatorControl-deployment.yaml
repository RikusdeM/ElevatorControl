apiVersion: apps/v1
kind: Deployment
metadata:
  name: ElevatorControl
  namespace: ElevatorControl
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: ElevatorControl
  template:
    metadata:
      labels: *labels
    spec:
      containers:
        - name: ElevatorControl
          imagePullPolicy: Always
          image: gitlab.mn8.ee:4567/dev/ElevatorControl:0.0.1
          ports:
            - containerPort: 80
          env:
            - name: SERVICE_PORT
              value: "80"
            - name: KAFKA_BOOTSTRAP_SERVER
              value: "my-cluster-kafka-bootstrap.kafka:9092"
            - name: ELASTIC_SERVER
              value: "elastic-master-0.elastic-master-headless.elastic-stack.svc.cluster.local"
            - name: ELASTIC_PORT
              value: "9200"
            - name: ELASTIC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: password
            - name: JKS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elastic-credentials
                  key: jksPassword
            - name: ROUTES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: routesauth
                  key: password

      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: ElevatorControl
  namespace: ElevatorControl
spec:
  type: ClusterIP
  selector:
    app: ElevatorControl
  ports:
    - name: ElevatorControl-port
      port: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ElevatorControl-ingress
  namespace: ElevatorControl
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - http:
        paths:
          - path: /ElevatorControl/.*
            backend:
              serviceName: ElevatorControl
              servicePort: 80

---

apiVersion: v1
kind: Secret
metadata:
  name: elastic-credentials
data:
  username: ZWxhc3RpYw==
  password: TDFhWHFjYXZEYVlnajNJUzM2ZzE=
  jksPassword: ""

---
apiVersion: v1
kind: Secret
metadata:
  name: routesauth
type: Opaque
data:
  password: cGEyODIxOXcwcmQ=